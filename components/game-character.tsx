"use client"

import { useEffect, useState, useRef } from "react"

interface GameCharacterProps {
  x: number
  y: number
}

export function GameCharacter({ x, y }: GameCharacterProps) {
  const [direction, setDirection] = useState("down")
  const [frame, setFrame] = useState(0)
  const [isMoving, setIsMoving] = useState(false)
  const prevPosition = useRef({ x, y })

  // –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
  useEffect(() => {
    const interval = setInterval(() => {
      setFrame((prev) => (prev + 1) % 4)
    }, 250)

    return () => clearInterval(interval)
  }, [])

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
  useEffect(() => {
    // –ï—Å–ª–∏ –ø–æ–∑–∏—Ü–∏—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å, –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–≤–∏–∂–µ—Ç—Å—è
    if (prevPosition.current.x !== x || prevPosition.current.y !== y) {
      setIsMoving(true)

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
      const dx = x - prevPosition.current.x
      const dy = y - prevPosition.current.y

      if (Math.abs(dx) > Math.abs(dy)) {
        // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç
        setDirection(dx > 0 ? "right" : "left")
      } else {
        // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç
        setDirection(dy > 0 ? "up" : "down")
      }

      // –ß–µ—Ä–µ–∑ 500–º—Å –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ (–ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è)
      const timer = setTimeout(() => {
        setIsMoving(false)
        prevPosition.current = { x, y }
      }, 500)

      return () => clearTimeout(timer)
    }
  }, [x, y])

  // –°–ª–µ–¥—ã –æ—Ç —à–∞–≥–æ–≤
  const [footprints, setFootprints] = useState<{ x: number; y: number; direction: string; opacity: number }[]>([])

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥–æ–≤ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏
  useEffect(() => {
    if (isMoving && frame % 2 === 0) {
      setFootprints((prev) => [
        ...prev.slice(-5), // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–ª–µ–¥–æ–≤
        { x, y, direction, opacity: 0.8 },
      ])
    }

    // –£–º–µ–Ω—å—à–∞–µ–º –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Å–ª–µ–¥–æ–≤ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
    const fadeInterval = setInterval(() => {
      setFootprints((prev) => prev.map((fp) => ({ ...fp, opacity: fp.opacity - 0.1 })).filter((fp) => fp.opacity > 0))
    }, 500)

    return () => clearInterval(fadeInterval)
  }, [isMoving, frame, x, y, direction])

  return (
    <>
      {/* –°–ª–µ–¥—ã –æ—Ç —à–∞–≥–æ–≤ */}
      {footprints.map((fp, index) => (
        <div
          key={index}
          className="absolute w-2 h-2 rounded-full bg-yellow-500"
          style={{
            left: `${fp.x}%`,
            top: `${fp.y}%`,
            opacity: fp.opacity,
            transform: "translate(-50%, -50%)",
            zIndex: 5,
          }}
        />
      ))}

      <div
        className="absolute transition-all duration-500 z-30"
        style={{
          left: `${x}%`,
          top: `${y}%`,
          transform: "translate(-50%, -50%)",
        }}
      >
        {/* –¢–µ–Ω—å –ø–æ–¥ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º */}
        <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 w-10 h-3 bg-black rounded-full opacity-30"></div>

        {/* –ü–µ—Ä—Å–æ–Ω–∞–∂ */}
        <div
          className={`w-12 h-12 bg-yellow-500 rounded-full flex items-center justify-center 
                       border-2 border-yellow-600 overflow-hidden shadow-md
                       ${isMoving ? "animate-bounce" : ""}`}
          style={{ animationDuration: "0.5s" }}
        >
          <span className="text-2xl">üòé</span>
        </div>

        {/* –≠—Ñ—Ñ–µ–∫—Ç –¥–≤–∏–∂–µ–Ω–∏—è */}
        {isMoving && (
          <div className="absolute -bottom-4 left-1/2 transform -translate-x-1/2 text-xs opacity-70">
            {direction === "up" || direction === "down" ? "‚ãØ" : "‚ãØ"}
          </div>
        )}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–∫–æ–≥–¥–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂ –±–ª–∏–∑–∫–æ –∫ –ª–æ–∫–∞—Ü–∏–∏) */}
        <div
          className="absolute -top-5 left-1/2 transform -translate-x-1/2 text-yellow-400 animate-bounce"
          style={{ display: isMoving ? "none" : "block", animationDuration: "1s" }}
        >
          ‚¨áÔ∏è
        </div>
      </div>
    </>
  )
}

